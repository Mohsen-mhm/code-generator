<?php

namespace {{ namespace }};

use {{ modelNamespace }}\{{ modelName }};
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Validator;
{{ foreignKeyImports }}

class {{ class }} extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        ${{ modelVariablePlural }} = {{ modelName }}::latest()->paginate(10);
        
        return view('{{ viewName }}.index', compact('{{ modelVariablePlural }}'));
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        {{ foreignKeyVariables }}
        
        return view('{{ viewName }}.create', compact('{{ modelVariableSingular }}'{{ foreignKeyVariables ? ', \'' . implode('\', \'', array_map(function($fk) { return $fk['name'] . 'Options'; }, $foreignKeys ?? [])) . '\'' : '' }}));
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(Request $request)
    {
        $validator = Validator::make($request->all(), [
            // Add validation rules based on your schema
        ]);
        
        if ($validator->fails()) {
            return redirect()->back()
                ->withErrors($validator)
                ->withInput();
        }
        
        {{ modelName }}::create($request->all());
        
        return redirect()->route('{{ viewName }}.index')
            ->with('success', '{{ modelName }} created successfully.');
    }

    /**
     * Display the specified resource.
     */
    public function show({{ modelName }} ${{ modelVariableSingular }})
    {
        return view('{{ viewName }}.show', compact('{{ modelVariableSingular }}'));
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit({{ modelName }} ${{ modelVariableSingular }})
    {
        {{ foreignKeyVariables }}
        
        return view('{{ viewName }}.edit', compact('{{ modelVariableSingular }}'{{ foreignKeyVariables ? ', \'' . implode('\', \'', array_map(function($fk) { return $fk['name'] . 'Options'; }, $foreignKeys ?? [])) . '\'' : '' }}));
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Request $request, {{ modelName }} ${{ modelVariableSingular }})
    {
        $validator = Validator::make($request->all(), [
            // Add validation rules based on your schema
        ]);
        
        if ($validator->fails()) {
            return redirect()->back()
                ->withErrors($validator)
                ->withInput();
        }
        
        ${{ modelVariableSingular }}->update($request->all());
        
        return redirect()->route('{{ viewName }}.index')
            ->with('success', '{{ modelName }} updated successfully.');
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy({{ modelName }} ${{ modelVariableSingular }})
    {
        ${{ modelVariableSingular }}->delete();
        
        return redirect()->route('{{ viewName }}.index')
            ->with('success', '{{ modelName }} deleted successfully.');
    }
} 